// Package restapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen/v2 version v2.0.0 DO NOT EDIT.
package restapi

import (
	"time"
)

const (
	BearerAuthScopes = "BearerAuth.Scopes"
)

// LoginRequest defines model for LoginRequest.
type LoginRequest struct {
	Password string `json:"password"`
	Username string `json:"username"`
}

// RefreshRequest defines model for RefreshRequest.
type RefreshRequest struct {
	RefreshToken string `json:"refresh_token"`
}

// TokenResponse defines model for TokenResponse.
type TokenResponse struct {
	// AccessToken The access token to be used for authorization
	AccessToken *string `json:"access_token,omitempty"`

	// ExpiresIn Time in seconds until the access token expires
	ExpiresIn *int `json:"expires_in,omitempty"`

	// RefreshToken The refresh token to get new access tokens
	RefreshToken *string `json:"refresh_token,omitempty"`
}

// User defines model for User.
type User struct {
	CreatedAt *time.Time `json:"created_at,omitempty"`
	Email     *string    `json:"email,omitempty"`
	FirstName *string    `json:"first_name,omitempty"`

	// Id Unique identifier for the user
	Id        *int       `json:"id,omitempty"`
	IsActive  *bool      `json:"is_active,omitempty"`
	LastName  *string    `json:"last_name,omitempty"`
	Password  *string    `json:"password,omitempty"`
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
}

// ListUsersParams defines parameters for ListUsers.
type ListUsersParams struct {
	// Page Page number for pagination
	Page *int `form:"page,omitempty" json:"page,omitempty"`

	// Limit Number of users per page
	Limit *int `form:"limit,omitempty" json:"limit,omitempty"`
}

// CreateUserJSONBody defines parameters for CreateUser.
type CreateUserJSONBody struct {
	Email     string `json:"email"`
	FirstName string `json:"first_name"`
	LastName  string `json:"last_name"`
	Password  string `json:"password"`
}

// UpdateUserJSONBody defines parameters for UpdateUser.
type UpdateUserJSONBody struct {
	Email     string `json:"email"`
	FirstName string `json:"first_name"`
	LastName  string `json:"last_name"`
}

// LoginJSONRequestBody defines body for Login for application/json ContentType.
type LoginJSONRequestBody = LoginRequest

// RefreshTokenJSONRequestBody defines body for RefreshToken for application/json ContentType.
type RefreshTokenJSONRequestBody = RefreshRequest

// CreateUserJSONRequestBody defines body for CreateUser for application/json ContentType.
type CreateUserJSONRequestBody CreateUserJSONBody

// UpdateUserJSONRequestBody defines body for UpdateUser for application/json ContentType.
type UpdateUserJSONRequestBody UpdateUserJSONBody
